* VR *re:stream*

** General

This is literate documentation for the VR native streaming desktop
application. The stack is based on
- [[http://clojure.org/][Clojure]]
- [[https://github.com/daveray/seesaw][seesaw]] [a LISPy Swing wrapper]
- [[https://github.com/Chouser/clojure-jna][clojure-jna]] [Dynamically load and use native C libs from Clojure using JNA]

** TODOs
*** TODO Integrate a Vorbis Encoder

**** [[http://svn.xiph.org/trunk/vorbis-java/][vorbis-java]]
     This is the official Java lib from Xiph, the creators of Ogg
     Vorbis.

     Unfortunately, though, it hasn't been updated since 2007, is
still in Beta and not available from Maven. For a manual install,
package the Class files with *jar cf something.jar [files]* and then
create a local Maven Repo for Leiningen: http://www.elangocheran.com/blog/2013/03/installing-jar-files-locally-for-leiningen-2/

     Note that putting a Jar into */lib* or using *:resource-paths* in
     project.clj doesn't seem to be the way to go since Leiningen 2.


*** Maybe not required
**** TODO Test streaming using [[https://github.com/OlegKunitsyn/libshout-java][libshout-java]]
**** TODO Alternatively test streaming using [[https://github.com/xiph/Icecast-libshout][native libshout library]] through
- Either through clojure-jna or Java JNA

** Development

*** Package for OS X

To start of packaging the Java Swing GUI for OS X, let's pack the
whole app inside of a stand alone jar.

To create a standalone Java Application through Leiningen, the main
class of the program has to be put into *project.clj* as the value of
the *:main* key. For this class to be available during the build
process, *(:gen-class)* has to be called within the *(ns)* declaration
of the responsible Clojure file. Documentation on how to achieve this
can be found [[http://asymmetrical-view.com/2010/06/08/building-standalone-jars-wtih-leiningen.html][here]].

#+BEGIN_SRC sh
lein uberjar
#+END_SRC sh

#+RESULTS:
| Warning: | specified                                                                                                             | :main    | without | including | it  | in      | :aot.    |           |        |      |      |      |      |
| Implicit | AOT                                                                                                                   | of       | :main   | will      | be  | removed | in       | Leiningen | 3.0.0. |      |      |      |      |
| If       | you                                                                                                                   | only     | need    | AOT       | for | your    | uberjar, | consider  | adding | :aot | :all | into | your |
| :uberjar | profile                                                                                                               | instead. |         |           |     |         |          |           |        |      |      |      |      |
| Created  | /Users/preek/src/voicerepublic/clojure_desktop_app_demo/target/clojure_desktop_app_demo-0.1.0-SNAPSHOT.jar            |          |         |           |     |         |          |           |        |      |      |      |      |
| Created  | /Users/preek/src/voicerepublic/clojure_desktop_app_demo/target/clojure_desktop_app_demo-0.1.0-SNAPSHOT-standalone.jar |          |         |           |     |         |          |           |        |      |      |      |      |

When curious, try starting the jar manually

#+BEGIN_SRC sh
java -jar target/clojure_desktop_app_demo-0.1.0-SNAPSHOT-standalone.jar
#+END_SRC sh

#+RESULTS:

The resulting JAR file is ready to be packaged into a Mac OS X
Installer.

*** TODO Write literate documentation on how to achieve this using [[http://centerkey.com/mac/java/][this]] as reference

** License

Copyright Â© 2016 Voice Republic Media AG
