* VR *re:stream*

** General

This is literate documentation for the VR native streaming desktop
application. The stack is based on

- [[http://clojure.org/][Clojure]]
- [[https://github.com/daveray/seesaw][seesaw]] [a LISPy Swing wrapper]
- [[https://github.com/OlegKunitsyn/libshout-java][libshout-java]]

*** Audio Architecture

#+BEGIN_SRC artist
    +----------------------+        +--------------------+          +-------------------+
    |    Audio Input       |        |    MP3 Encoding    |          |  Web Audio Stream |
    |   Java `sampled`     +------->|     shell lame     +--------->|    libshout       |
    |                      |        |                    |          |                   |
    +----------------------+        +--------------------+          +-------------------+
#+END_SRC

** libshout-java
*** Install
    Tested on Debian Jessie

Note that putting a Jar into */lib* or using *:resource-paths* in
project.clj doesn't seem to be the way to go since Leiningen 2.

**** Checkout libshout-java
#+BEGIN_SRC shell
apt-get install git libshout3-dev maven
git clone https://github.com/OlegKunitsyn/libshout-java.git
cd libshout-java
#+END_SRC

**** Fix a test (otherwise it will not install)

 - Fix the test /testVersion()/ in
   /src/test/java/com/gmail/kunicins/olegs/libshout/LibshoutTest.java/ to
   check for your installed version of libshout
 - It's tested and working with version 2.3.1
 - Find your version via

#+BEGIN_SRC shell
apt-cache show libshout3-dev | ag version | egrep -o "2.[0-9].[0-9]"
#+END_SRC

  - Then install the library to your local maven repository so that
    `lein deps` can find it

#+BEGIN_SRC shell
mvn install
#+END_SRC

**** TODO Move this compiled Library to a HTTP repo so that not every user has to install it to a local repo

** shout protocol
Reverse engineered streaming of Ogg Vorbis files:

#+BEGIN_SRC clojure
  (client/put "http://52.58.65.224/4609"
              {
               :basic-auth ["source" "thisisagoodpassword"]
               :body (clojure.java.io/file "/home/munen/src/voicerepublic_icecast_tests/manual_put/test.ogg")
               :headers {
                         :user-agent "vr_shout/0.2.0"
                         :ice-bitrate "128"
                         :content-type "application/ogg"
                         :ice-name "VR Server Name"
                         :ice-genre "Rock"
                         :ice-title "VR Title"
                         :ice-url "https://voicerepublic.com"
                         :ice-private "0"
                         :ice-public "1"
                         :ice-description "VR Server Description"
                         :ice-audio-info "ice-samplerate=44100;ice-bitrate=128;ice-channels=2"
                         }
               })

#+END_SRC

** To-dos
** Implementation Notes
*** Finding available audio input devices
Note: It would be possible to check for LINE_IN and MICROPHONE
directly using
(AudioSystem/isLineSupported Port$Info/LINE_IN)
and
(AudioSystem/getLine Port$Info/LINE_IN)
However, this does not always return a line with said capability
(seen in Debian 8). Therefore, we're using the method to request a
line via the Mixer.

*** Why streaming MP3 and not Vorbis?

[[http://svn.xiph.org/trunk/vorbis-java/][vorbis-java]] is the official Java lib from Xiph, the creators of Ogg
Vorbis. It has example source and even a port of the libshout lib.

Unfortunately, though, it hasn't been updated since 2007, is still in
Beta and not available from Maven. For a manual install, package the
Class files with *jar cf something.jar [files]* and then create a
local Maven Repo for Leiningen:
http://www.elangocheran.com/blog/2013/03/installing-jar-files-locally-for-leiningen-2/


** Development

*** Package for OS X

To start of packaging the Java Swing GUI for OS X, let's pack the
whole app inside of a stand alone jar.

To create a standalone Java Application through Leiningen, the main
class of the program has to be put into *project.clj* as the value of
the *:main* key. For this class to be available during the build
process, *(:gen-class)* has to be called within the *(ns)* declaration
of the responsible Clojure file. Documentation on how to achieve this
can be found [[http://asymmetrical-view.com/2010/06/08/building-standalone-jars-wtih-leiningen.html][here]].

#+BEGIN_SRC sh
lein uberjar
#+END_SRC sh

#+RESULTS:
| Warning: | specified                                                                                                             | :main    | without | including | it  | in      | :aot.    |           |        |      |      |      |      |
| Implicit | AOT                                                                                                                   | of       | :main   | will      | be  | removed | in       | Leiningen | 3.0.0. |      |      |      |      |
| If       | you                                                                                                                   | only     | need    | AOT       | for | your    | uberjar, | consider  | adding | :aot | :all | into | your |
| :uberjar | profile                                                                                                               | instead. |         |           |     |         |          |           |        |      |      |      |      |
| Created  | /Users/preek/src/voicerepublic/clojure_desktop_app_demo/target/clojure_desktop_app_demo-0.1.0-SNAPSHOT.jar            |          |         |           |     |         |          |           |        |      |      |      |      |
| Created  | /Users/preek/src/voicerepublic/clojure_desktop_app_demo/target/clojure_desktop_app_demo-0.1.0-SNAPSHOT-standalone.jar |          |         |           |     |         |          |           |        |      |      |      |      |

When curious, try starting the jar manually

#+BEGIN_SRC sh
java -jar target/clojure_desktop_app_demo-0.1.0-SNAPSHOT-standalone.jar
#+END_SRC sh

#+RESULTS:

The resulting JAR file is ready to be packaged into a Mac OS X
Installer.

*** TODO Write literate documentation on how to achieve this using [[http://centerkey.com/mac/java/][this]] as reference

** License

Copyright Â© 2016 Voice Republic Media AG
